/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM Extend Project: Open Source CFD        |
|  \\    /   O peration     | Version:  1.6-ext                               |
|   \\  /    A nd           | Web:      www.extend-project.de                 |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      fvSolution;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

solvers
{
//     p
//     {
//         solver           PCG;
//         preconditioner   DIC;

//         minIter          1;
//         maxIter          1000;
//         tolerance        1e-06;
//         relTol           0.01;
//     }

//     p
//     {
//         solver           smoothSolver;
//         smoother         GaussSeidel;
//         nSweeps          10;

//         minIter          1;
//         maxIter          1000;
//         tolerance        1e-06;
//         relTol           0.01;
//     }

    p
    {
        solver          amgSolver;
        cycle           W-cycle;
        policy          SAMG;
        nPreSweeps      0;
        nPostSweeps     2;
        groupSize       4;
        minCoarseEqns   50;
        nMaxLevels      100;
        scale           on;
        smoother        ILU;

        minIter    1;
        maxIter    200;
        tolerance  1e-6;
        relTol     0.05;
    }

//     p
//     {
//         solver          GAMG;
//         tolerance       1e-06;
//         relTol          0.05;
//         minIter 1;
//         smoother        GaussSeidel;
//         cacheAgglomeration true;
//         nCellsInCoarsestLevel 10;
//         agglomerator    faceAreaPair;
//         mergeLevels     1;
//     }

    U
    {
        solver           PBiCG;
        preconditioner   DILU;

//         solver           PCG;
//         preconditioner   DIC;

        minIter          1;
        maxIter          1000;
        tolerance        1e-06;
        relTol           0;
    };
}

SIMPLE
{
    nNonOrthogonalCorrectors 1;

    pRefPoint (0.1 0 0);
    pRefValue 0;
}

relaxationFactors
{
    U    0.7;
    p    0.3;
}


// ************************************************************************* //
